name: Globally installs Azure Functions Core Tools and Azurite
description: |
  If npm is not installed, it will install the latest LTS version of Node.js.

  Azure Functions Core Tools is needed when running the Azure Functions locally.
  It is not needed for publishing the FunctionApp.

  Azurite is a storage emulator and is needed when running applications / tests, and the application requires a local storage.
inputs:
  azure_functions_core_tools_version:
    description: Install specified Azure Functions Core Tools version
    required: false
    default: 4.0.6594

  azurite_version:
    description: Install specified Azurite version
    required: false
    default: 3.35.0

runs:
  using: composite
  steps:
    - name: Check if npm is installed
      id: check_npm
      shell: bash
      run: |
        if command -v npm >/dev/null 2>&1; then
          echo "npm_installed=true" >> $GITHUB_OUTPUT
        else
          echo "npm_installed=false" >> $GITHUB_OUTPUT
        fi

    - name: Install Node.js lts if npm is not installed
      if: steps.check_npm.outputs.npm_installed == 'false'
      uses: actions/setup-node@v4
      with:
        node-version: 'lts/*'

    - name: Get global node_modules path
      id: get_global_nodemodules_path
      shell: bash
      run: echo "global_nodemodules_path=$(npm root -g)" >> $GITHUB_OUTPUT

    # For maximum effect this has to be run on main branch to be reused from other branches
    - name: Cache global node modules
      id: cache-nodemodules
      uses: actions/cache@v4
      with:
        key: ${{ runner.os }}-func-tools-${{ inputs.azure_functions_core_tools_version }}
        path: ${{ steps.get_global_nodemodules_path.outputs.global_nodemodules_path }}

    - name: Install Azure Functions Core Tools v${{ inputs.azure_functions_core_tools_version }} globally
      if: ${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}
      shell: bash
      run: |
        npm install -g azure-functions-core-tools@${{ inputs.azure_functions_core_tools_version }}

    - name: Install Azurite v${{ inputs.azurite_version }} globally
      if: ${{ steps.cache-nodemodules.outputs.cache-hit != 'true' }}
      shell: bash
      run: |
        npm install -g azurite@${{ inputs.azurite_version }}
