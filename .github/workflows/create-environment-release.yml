# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: Create environment release

on:
  workflow_call:
    inputs:
      REPOSITORY_NAME:
        required: true
        type: string
    secrets:
      PAT_TOKEN:
        required: true
      ENVIRONMENT_REPOSITORY_PATH:
        required: true

jobs:
  create_release:
    name: Create new release
    runs-on: ubuntu-latest
    env:
      RELEASE_FOLDER_PATH: ${{ github.workspace }}/release
      LOCAL_REPO_FOLDER_PATH: '${{ github.workspace }}/local_repo'
      REMOTE_REPO_FOLDER_PATH: '${{ github.workspace }}/remote_repo'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ${{ env.LOCAL_REPO_FOLDER_PATH }}

      - name: Get release version
        shell: bash
        run: |
          file=${{ env.LOCAL_REPO_FOLDER_PATH }}/VERSION
          VERSION=$(cat "$file")
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV

      - name: Copy Terraform to release folder
        shell: bash
        run: |
          mkdir ${{ env.RELEASE_FOLDER_PATH }}
          cp -fR ${{ env.LOCAL_REPO_FOLDER_PATH }}/build/infrastructure ${{ env.RELEASE_FOLDER_PATH }} 2>/dev/null || :

      - name: Zip artifact
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: '${{ env.RELEASE_VERSION }}.zip'
          directory: ${{ env.RELEASE_FOLDER_PATH }}

      - name: Publish artifact
        shell: bash
        env:
          REMOTE_REPO_URL: https://foo:${{ secrets.PAT_TOKEN }}@github.com/${{ secrets.ENVIRONMENT_REPOSITORY_PATH }}
          REMOTE_RELEASE_FOLDER_PATH: ${{ env.REMOTE_REPO_FOLDER_PATH }}/${{ inputs.REPOSITORY_NAME }}/artifacts
        run: |
          # Setup git
          git config --global user.email '${{ inputs.REPOSITORY_NAME }}@example.com'
          git config --global user.name geh-shared-resources

          # Setup remote repo
          git clone --single-branch --branch main ${{ env.REMOTE_REPO_URL }} ${{ env.REMOTE_REPO_FOLDER_PATH }}
          mkdir ${{ env.REMOTE_RELEASE_FOLDER_PATH }} 2>/dev/null || :

          # Copy release
          cp ${{ env.RELEASE_FOLDER_PATH }}/${{ env.RELEASE_VERSION }}.zip ${{ env.REMOTE_RELEASE_FOLDER_PATH }}

          # Commit and push
          cd ${{ env.REMOTE_REPO_FOLDER_PATH }}
          git add .
          git commit -m "Pushing artifact v${{ env.RELEASE_VERSION }} from ${{ inputs.REPOSITORY_NAME }}"
          git push origin main