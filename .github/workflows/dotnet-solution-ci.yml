# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: .NET solution CI

on:
  workflow_call:
    inputs:
      SOLUTION_FILE_PATH:
        required: true
        type: string
      DOTNET_VERSION:
        required: true
        type: string
      OPERATING_SYSTEM:
        required: false
        default: 'windows-latest'
        type: string
      USE_COSMOS_DB_EMULATOR:
        required: false
        default: false
        type: boolean
      INSTALL_AZURITE:
        required: false
        default: false
        type: boolean
      INSTALL_AZURE_CORE_TOOLS:
        required: false
        default: false
        type: boolean

env:
  AZURITE_VERSION: '3.14.0'
  AZURE_FUNCTIONS_CORE_TOOLS_VERSION: '3.0.3568'

jobs:
  function_ci:
    runs-on: ${{ inputs.OPERATING_SYSTEM }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@master
              
      - name: Setup .NET ${{ env.DOTNET_VERSION }} environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Setup Azure Cosmos DB Emulator
        if: ${{ inputs.USE_COSMOS_DB_EMULATOR == true }}
        uses: southpolesteve/cosmos-emulator-github-action@v1
        
      - name: Setup Azurite
        if: ${{ inputs.INSTALL_AZURITE == true }}
        run: npm install -g azurite@${{ env.AZURITE_VERSION }}

      - name: Install Azure Functions Core Tools v${{ env.AZURE_FUNCTIONS_CORE_TOOLS_VERSION }}
        if: ${{ inputs.INSTALL_AZURE_CORE_TOOLS == true }}
        run: npm install -g azure-functions-core-tools@${{ env.AZURE_FUNCTIONS_CORE_TOOLS_VERSION }}

      - name: Test and publish report
        shell: bash
        run: |
          dotnet tool install --tool-path ./temp/reportgenerator dotnet-reportgenerator-globaltool
          dotnet test ${{ inputs.SOLUTION_FILE_PATH }} --collect:"XPlat Code Coverage" -- DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover --output ${{ github.workspace }}/output

      - name: Upload coverage
        uses: codecov/codecov-action@v1
        with:
          flags: unittests
          fail_ci_if_error: true
          verbose: true