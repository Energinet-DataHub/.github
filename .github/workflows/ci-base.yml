# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Basic QA validation

# DESCRIPTION:
# This workflow is used to validate basic rules that is relevant for all
# repositories. A given repository might be able to skip certain rules but
# at least some of the rules are relevant for all repositories.

on:
  workflow_call:
    inputs:
      operating_system:
        required: false
        default: ubuntu-22.04
        type: string
      skip_markdown_links_check:
        required: false
        type: string
        description: Set to true to skip checking Markdown links.
        default: "false"
      skip_markdown_check:
        required: false
        type: string
        description: Set to true to skip checking Markdown files.
        default: "false"
      skip_license_check:
        required: false
        type: string
        description: Set to true to skip checking License lines. All public repositories should run license check.
        default: "false"
      skip_yaml_lint:
        required: false
        type: string
        description: Set to true to skip YAML linting for Github actions and workflows in repository.
        default: "false"
      skip_actions_casing_validation:
        required: false
        type: string
        description: Set to true to skip casing validation for Github actions and workflows in repository.
        default: "false"
      skip_actions_powershell_verification:
        required: false
        type: string
        description: Set to true to skip executing Pester tests for Github actions in repository.
        default: "false"
      skip_validate_version_references:
        required: false
        type: string
        description: Set to true to skip validation of references to deprecated versions.
        default: "false"

jobs:
  md_check:
    name: Markdown Check
    if: ${{ inputs.skip_markdown_check != 'true' }}
    runs-on: ${{ inputs.operating_system }}
    env:
      REMOTE_REPO_PATH: ${{ github.workspace }}/remote
    steps:
      - name: Checkout local repo
        uses: actions/checkout@v3

      - name: Checkout remote repository
        uses: actions/checkout@v3
        with:
          repository: Energinet-DataHub/.github
          path: ${{ env.REMOTE_REPO_PATH }}

      - name: Copy configuration files
        run: |
          cp ${{ env.REMOTE_REPO_PATH }}/.github/utilities/md-check/.markdownlint.json ${{ github.workspace }}/.markdownlint.json
          cp ${{ env.REMOTE_REPO_PATH }}/.github/utilities/md-check/mlc_config.json ${{ github.workspace }}/mlc_config.json

      - name: Cleanup remote
        run: rm -rf ${{ env.REMOTE_REPO_PATH }}

      # https://github.com/marketplace/actions/markdown-link-check
      - name: Markdown links check
        if: ${{ inputs.skip_markdown_links_check != 'true' }}
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: "yes"
          use-verbose-mode: "yes"
          check-modified-files-only: "yes"
          config-file: ./mlc_config.json
          base-branch: main
        continue-on-error: true
        id: md-link-check

      - name: Register markdownlint problem matcher
        uses: xt0rted/markdownlint-problem-matcher@v2
        id: md-lint-check-matcher

      # https://github.com/marketplace/actions/markdownlint-mdl-action
      - name: Markdown lint check
        uses: avto-dev/markdown-lint@v1
        with:
          args: ./
        continue-on-error: true
        id: md-lint-check

      - name: Summarize
        run: |
          echo "Markdown check results: "
          fail=0
          if [[ "${{steps.md-link-check.conclusion}}" == "failure" ]] || [[ "${{steps.md-link-check.outcome}}" == "failure" ]]; then
            fail=1
            echo -e "- Markdown links check:   \e[31mFailure"
          else
            echo -e "- Markdown links check:   \e[32mSuccess"
          fi

          if [[ "${{steps.md-lint-check.conclusion}}" == "failure" ]] || [[ "${{steps.md-lint-check.outcome}}" == "failure" ]]; then
            fail=1
            echo -e "- Markdown lint check:    \e[31mFailure"
          else
            echo -e "- Markdown lint check:    \e[32mSuccess"
          fi
          if [[ $fail -eq 1 ]]; then
            echo -e "Expand individual steps above to view specific errors."
            exit 1
          fi

  check_license_lines:
    name: Check License Lines
    if: ${{ inputs.skip_license_check != 'true' }}
    runs-on: ${{ inputs.operating_system }}
    env:
      REMOTE_REPO_PATH: ${{ github.workspace }}/remote
    steps:
      - name: Checkout local repo
        uses: actions/checkout@v3

      - name: Checkout remote repository
        uses: actions/checkout@v3
        with:
          repository: Energinet-DataHub/.github
          path: ${{ env.REMOTE_REPO_PATH }}

      - name: Copy configuration files
        run: cp ${{ env.REMOTE_REPO_PATH }}/.github/utilities/license-check/.licenserc.json ${{ github.workspace }}/.licenserc.json

      - name: Cleanup remote
        run: rm -rf ${{ env.REMOTE_REPO_PATH }}

      - name: Check License Lines
        shell: bash
        run: |
          yarn add @kt3k/license-checker@v3.2.2
          npx @kt3k/license-checker

  github_actions_yaml_linting:
    name: YAML linting for Github actions and workflows
    if: ${{ inputs.skip_yaml_lint != 'true' }}
    runs-on: ${{ inputs.operating_system }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run yamllint on .github folder
        uses: Energinet-DataHub/.github/.github/actions/yaml-lint@v11
        with:
          yaml_file_or_folder: .github

  github_actions_validate_casing:
    name: Validate casing in Github actions and workflows
    if: ${{ inputs.skip_actions_casing_validation != 'true' }}
    runs-on: ${{ inputs.operating_system }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Run casing validation on .github folder
        uses: Energinet-DataHub/.github/.github/actions/github-actions-validate-casing@v11
        with:
          folder: .github

  github_actions_powershell_verification:
    name: Run Pester tests in actions-folder
    if: ${{ inputs.skip_actions_powershell_verification != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Pester tests
        shell: pwsh
        run: |
          $pesterTestFilesPattern = ".github/actions/**/*.Tests.ps1"
          if (Test-Path -Path $pesterTestFilesPattern -PathType leaf) {
            Invoke-Pester -Output 'Detailed' -CI $pesterTestFilesPattern
          }
          else {
            Write-Host "No Pester test files detected. Skipping Pester execution."
          }

  github_validate_version_references:
    name: Validate references
    if: ${{ inputs.skip_validate_version_references != 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run reference validation on local folder
        uses: Energinet-DataHub/.github/.github/actions/github-validate-version-references@rf-halfspace/validate-references-gate
        with:
          folder: ${{ github.workspace }}
    env:
      GH_TOKEN: ${{ secrets.PAT_TOKEN_REPO_WORKFLOW }} # Organization level token needed for gh api search
