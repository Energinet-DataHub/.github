# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Render C4 diagrams using Structurizr Lite

# DESCRIPTION:
# This workflow is used to render C4 model views in a primary Structurizr DSL file using
# Structurizr Lite (https://structurizr.com/help/lite). Views are rendered as PNG images.
#
# Structurizr Lite loads the DSL information and matching layout information from a pair
# of files named according to the "Structurizr workspace filename":
#  - '<structurizr_workspace_filename>.dsl'
#  - '<structurizr_workspace_filename>.json'
#
# The workflow support if the primary DSL file includes another C4 model DSL file. In this
# case the input parameter 'included_model_filename' should be used to specify the filename
# of this DSL file.
#
# The rendered diagrams are committed to the feature branch using the `stefanzweifel/git-auto-commit-action`-action.
# To avoid an infinite loop of rendered diagrams being committed to the feature branch, the
# `tj-actions/changed-files`-action is used to determine if the DSL file is changed by the recent
# push to the remote feature branch.
# The `tj-actions/changed-files`-action is called with the `since_last_remote_commit`-property set to `true`.
# That means if multiple commits are pushed to the remote branch at the same time, all commits will be
# checked for changes to the DSL file. If `since_last_remote_commit` is false (default value),
# only the latest commit being pushed is checked - thereby not checking any intermediate commits.

on:
  workflow_call:
    inputs:
      structurizr_workspace_filename:
        description: Structurizr workspace filename, see https://structurizr.com/share/76352/documentation#workspace-filename.
        required: true
        type: string
      included_model_filename:
        description: |
          Only used if the primary DSL file includes another DSL file.
          Specify the filename (without extension) of the included C4 model DSL file.
        required: false
        type: string
        default: not-in-use # Having a default value makes the workflow simpler to develop
    secrets:
      pat_token_retrigger_workflow:
        description: |
          Used to be able to re-trigger workflows if rendered diagrams are pushed.
          It must be a PAT token with `repo` and `workflow` scopes.
        required: true

jobs:
  render_structurizr_diagrams:
    runs-on: ubuntu-latest
    env:
      # Location of Structurizr workspace files (*.dsl, *.json)
      DIAGRAMS_FOLDER: ${{ github.workspace }}/docs/diagrams/c4-model
      # Url for diagrams page in Structurizr Lite, when running in docker
      DIAGRAMS_PAGE_URL: http://localhost:8080/workspace/diagrams
    services:
      # Structurizr Lite image from Docker Hub, see available tags here: https://hub.docker.com/r/structurizr/lite/tags
      structurizr-lite:
        image: structurizr/lite:latest
        ports:
          - 8080:8080
        volumes:
          - ${{ github.workspace }}/docs/diagrams:/usr/local/structurizr
        env:
          STRUCTURIZR_WORKSPACE_PATH: /c4-model
          STRUCTURIZR_WORKSPACE_FILENAME: ${{ inputs.structurizr_workspace_filename }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          # Repository checkout must be called with a PAT token with `repo` and `workflow` scopes.
          # Otherwise `stefanzweifel/git-auto-commit-action` used later in the workflow won't trigger new workflow runs.
          # Link: https://github.com/stefanzweifel/git-auto-commit-action#commits-made-by-this-action-do-not-trigger-new-workflow-runs
          token: ${{ secrets.pat_token_retrigger_workflow }}
          clean: false

      # - name: Setup node
      #   uses: actions/setup-node@v3

      # # Script is available from https://github.com/structurizr/puppeteer
      # - name: Prepare export-diagrams script
      #   shell: bash
      #   run: |
      #     cd "${{ env.DIAGRAMS_FOLDER }}"
      #     rm -rf */
      #     npm i puppeteer
      #     curl https://raw.githubusercontent.com/structurizr/puppeteer/cf6f70da15fb18c038e052c9335970eecd77025a/export-diagrams.js --output export-diagrams.js

      # - name: Determine if Structurizr files has changed since last pushed commit to the remote branch
      #   id: diagrams_changed
      #   uses: tj-actions/changed-files@v35
      #   with:
      #     since_last_remote_commit: true
      #     files: |
      #       **/docs/diagrams/c4-model/${{ inputs.structurizr_workspace_filename }}.dsl
      #       **/docs/diagrams/c4-model/${{ inputs.structurizr_workspace_filename }}.json
      #       **/docs/diagrams/c4-model/${{ inputs.included_model_filename }}.dsl

      # - name: Write out any changes to Structurizr files - based on `diagrams_changed`-step
      #   shell: bash
      #   run: |
      #     echo "Structurizr files has changed: ${{ steps.diagrams_changed.outputs.any_changed }}"
      #     echo "List changed files: ${{ steps.diagrams_changed.outputs.all_changed_files }}"

      # - name: Render diagrams as PNG images
      #   if: steps.diagrams_changed.outputs.any_changed == 'true'
      #   shell: bash
      #   run: |
      #     cd "${{ env.DIAGRAMS_FOLDER }}"
      #     set -e
      #     echo "Rendering diagram(s) ..."
      #     ! node export-diagrams.js ${{ env.DIAGRAMS_PAGE_URL }} png | grep png
      #     echo "Rendered diagram(s)"
      #     rm *-key.png
      #     foldername=${{ inputs.structurizr_workspace_filename }}
      #     mkdir "$foldername"
      #     mv -f *.png "$foldername/"

      # - name: Commit PNG images
      #   if: steps.diagrams_changed.outputs.any_changed == 'true'
      #   uses: stefanzweifel/git-auto-commit-action@v4
      #   with:
      #     commit_message: Auto generated diagrams
      #     file_pattern: ${{ env.DIAGRAMS_FOLDER }}/**/*.png
