# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build containers, update and release chart

on:
  workflow_call:
    inputs:
      containers:
        description: |
          Json string containing the containers to be built.
          the format is:
          [
            { 
              deployment_name: "app", 
              dockerfile: "app/Dockerfile", 
              image_name: 'eo-frontend-app', 
              image_tag: 'v1.2.3', 
              context: '.'
            },
            { 
              deployment_name: "api", 
              dockerfile: "api/Dockerfile", 
              image_name: 'eo-auth-api', 
              image_tag: 'v1.3.1' 
            }
          ]
        type: string
        required: true
      chart_folder:
        description: The folder containing the chart to release_name
        type: string
        required: true
      chart_version:
        description: Override the chart version to a specific version
        type: string
        required: false
      helm_repository:
        description: The repository to publish the chart.
        type: string
        required: false
        default: ${{ github.repository_owner }}/helm-charts
 
    secrets:
      RELEASE_CHART_TOKEN: 
        description: |
          The token used to create the release and 
          release the chart with a workflow dispatch to 'inputs.helm_repository'.
        required: true

    outputs:
      chart_name: 
        description:
        value: ${{ jobs.release_chart.outputs.chart_name }}
      chart_version:
        description:
        value: ${{ jobs.release_chart.outputs.chart_version }}
jobs:
  build_containers_and_update_chart:
    name: Build containers
    runs-on: ubuntu-latest
    strategy:
      matrix:
        containers: ${{fromJson(inputs.containers)}} 
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          path: artifacts/

      - name: Container image name
        id: image_name
        uses: ASzc/change-string-case-action@v2
        with:
          string: ghcr.io/${{ github.repository_owner }}/${{ matrix.containers.image_name }}

      - name: Build and push container image
        id: docker_build
        uses: Energinet-DataHub/.github/.github/actions/build-and-push-container@main
        with: 
          dockerfile: ${{ matrix.containers.Dockerfile }}
          image_name: ${{ steps.image_name.outputs.lowercase }}
          image_tag: ${{ matrix.containers.image_tag }}
          docker_context: ${{ matrix.containers.context && matrix.containers.context || '.'}}

  release_chart:
    name: Release domain chart
    needs: [build_containers_and_update_chart]
    runs-on: ubuntu-latest
    outputs:
      chart_name: ${{ steps.release_chart.outputs.chart_name }}
      chart_version: ${{ steps.release_chart.outputs.chart_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: install yamlpath
        uses: Energinet-DataHub/.github/.github/actions/yamlpath-install@main
        
      - name: If pr then override containers version in chart
        if: github.event_name == 'pull_request'
        shell: bash
        run: |
          JSON='${{ inputs.containers }}'
          VALUES_FILE=${{ inputs.chart_folder }}/values.yaml
          echo $JSON | jq -c '.[]' | while read i; do
              DEPLOYMENT_NAME=$(echo $i | jq -r .deployment_name)
              TAG=$(echo $i | jq -r .image_tag)
              yaml-set --change eo-base-helm-chart.deployments.${DEPLOYMENT_NAME}.image.tag --value $TAG $VALUES_FILE
          done
        
      - name: Release helm chart
        id: release_chart
        uses: Energinet-DataHub/.github/.github/actions/helm-release-chart@main
        with:
          release_token: ${{ secrets.RELEASE_CHART_TOKEN }}
          dispatch_token: ${{ secrets.RELEASE_CHART_TOKEN }}
          chart_folder: ${{ inputs.chart_folder }}
          chart_repository: ${{ inputs.helm_repository }}
          chart_version: ${{ inputs.chart_version }}
