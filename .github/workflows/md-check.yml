# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
name: Markdown Check

on:
  workflow_call:

jobs:
  md-check:
    name: Markdown Check
    runs-on: ubuntu-latest
    env:
      REMOTE_REPO_PATH: ${{ github.workspace }}/remote
    steps:
      - name: Should skip?
        id: skip_check
        uses: fkirc/skip-duplicate-actions@v1.4.0
        with:
          github_token: ${{ github.token }}
          paths: '[
            "**.md",
            "**.MD",
            "**.Md",
            "**.mD"
          ]'

      - name: Checkout local repo
        if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
        uses: actions/checkout@v2

      - name: Checkout remote repository
        uses: actions/checkout@v2
        if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
        with:
          repository: 'Energinet-DataHub/.github'
          path: ${{ env.REMOTE_REPO_PATH }}

      - name: Copy configuration files
        if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
        run: |
          cp ${{ env.REMOTE_REPO_PATH }}/.github/utilities/md-check/.markdownlint.json ${{ github.workspace }}/.markdownlint.json
          cp ${{ env.REMOTE_REPO_PATH }}/.github/utilities/md-check/mlc_config.json ${{ github.workspace }}/mlc_config.json
          cp ${{ env.REMOTE_REPO_PATH }}/.github/utilities/md-check/spellcheck.yml ${{ github.workspace }}/spellcheck.yml

      - name: Cleanup remote
        if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
        run: rm -rf ${{ env.REMOTE_REPO_PATH }}

      - name: Replace path in Spell Check config
        if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
        run: sed -i -e 's/..\/..\///g' ${{ github.workspace }}/spellcheck.yml

      # https://github.com/marketplace/actions/markdown-link-check
      - name: Markdown links check
        if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
        uses: gaurav-nelson/github-action-markdown-link-check@v1
        with:
          use-quiet-mode: 'yes'
          use-verbose-mode: 'yes'
          config-file: './mlc_config.json'
        continue-on-error: true
        id: md-link-check

      # https://github.com/marketplace/actions/github-spellcheck-action
      - name: Markdown spell check
        if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
        uses: rojopolis/spellcheck-github-actions@0.5.0
        continue-on-error: true
        id: md-spell-check

      - name: Register markdownlint problem matcher
        if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
        uses: xt0rted/markdownlint-problem-matcher@v1
        id: md-lint-check-matcher

      # https://github.com/marketplace/actions/markdownlint-mdl-action
      - name: Markdown lint check
        if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
        uses: avto-dev/markdown-lint@v1
        with:
          args: './'
        continue-on-error: true
        id: md-lint-check

      - name: Summarize
        if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
        run: |
          echo "Markdown check results: "
          fail=0
          if [[ "${{steps.md-link-check.conclusion}}" == "failure" ]] || [[ "${{steps.md-link-check.outcome}}" == "failure" ]]; then
            fail=1
            echo -e "- Markdown links check:   \e[31mFailure"
          else
            echo -e "- Markdown links check:   \e[32mSuccess"
          fi
          if [[ "${{steps.md-spell-check.conclusion}}" == "failure" ]] || [[ "${{steps.md-spell-check.outcome}}" == "failure" ]]; then
            fail=1
            echo -e "- Markdown spell check:   \e[31mFailure"
          else
            echo -e "- Markdown spell check:   \e[32mSuccess"
          fi
          if [[ "${{steps.md-lint-check.conclusion}}" == "failure" ]] || [[ "${{steps.md-lint-check.outcome}}" == "failure" ]]; then
            fail=1
            echo -e "- Markdown lint check:    \e[31mFailure"
          else
            echo -e "- Markdown lint check:    \e[32mSuccess"
          fi
          if [[ $fail -eq 1 ]]; then
            echo -e "Expand individual steps above to view specific errors."
            exit 1
          fi