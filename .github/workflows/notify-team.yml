# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Notify team

# DESCRIPTION:
# This workflow is used to notify teams about failing deployments
# by sending an email to their MS Team Channel or possibly direct mails.
#
# Note: Variables prefixed "EMAIL_" are organization variables allowing this reusable workflow to access them
# regardless of where the workflow is used

on:
  workflow_call:
    inputs:
      team_name:
        description: The name of the team who should receive the email. Used to determine the email address.
        required: true
        type: string
      subject:
        description: The email subject. Should contain environment information when possible.
        required: true
        type: string
      body:
        description: Additional content for the email body. Apart from this the email body will also always contain a link to the failed build.
        required: false
        default: ""
        type: string

jobs:
  notify_team:
    runs-on: ubuntu-latest
    steps:
      - name: Determine email
        id: get_email
        shell: bash
        run: |
          if [ ${{ inputs.team_name }} == 'Mosaic' ]; then
            team_email=${{ vars.email_mosaic }}
          elif [ ${{ inputs.team_name }} == 'Mandalorian' ]; then
            team_email=${{ vars.email_mandalorian }}
          elif [ ${{ inputs.team_name }} == 'Titans' ]; then
            team_email=${{ vars.email_titans }}
          elif [ ${{ inputs.team_name }} == 'TheOutlaws' ]; then
            team_email=${{ vars.email_theoutlaws }}
          elif [ ${{ inputs.team_name }} == 'Volt' ]; then
            team_email=${{ vars.email_volt }}
          elif [ ${{ inputs.team_name}} == 'TeamFrontend' ]; then
            team_email=${{ vars.email_teamfrontend }}
          elif [ ${{ inputs.team_name}} == 'TeamEsettDeprecated' ]; then
            team_email=${{ vars.email_teamesettdeprecated }}
          else
            # Fallback
            team_email=${{ vars.email_theoutlaws }}
          fi

          echo "::add-mask::$team_email"
          echo "team_email=$team_email" >>$GITHUB_OUTPUT

      - name: Send email
        uses: Energinet-DataHub/.github/.github/actions/send-email@v13
        with:
          sendgrid-api-key: ${{ secrets.sendgrid_instance_system_notifications_api_key }}
          team-name: ${{ inputs.team_name }}
          to: ${{ steps.get_email.outputs.team_email }}
          from: ${{ vars.email_internal_sender }}
          subject: ${{ inputs.subject }}
          content: ${{ inputs.body }}
