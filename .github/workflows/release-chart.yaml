name: Release chart

on:
  workflow_call:
    inputs:
      containers:
        description: |
          JSON string containing the containers to be built.
          Example:
          ```json
          [
            {
              deployment_name: "app",
              dockerfile: "app/Dockerfile",
              image_name: 'eo-frontend-app',
              image_tag: 'v1.2.3',
              context: '.'
            },
            {
              deployment_name: "api",
              dockerfile: "api/Dockerfile",
              image_name: 'eo-auth-api',
              image_tag: 'v1.3.1'
            }
          ]
          ```
        type: string
        required: true
      chart_folder:
        description: The path to the folder in the head (feature) branch containing the Helm charts for the services specified in `containers`.
        type: string
        required: true
      chart_version:
        description: "Optional: Override the Helm chart version to a specific version"
        type: string
        required: false
      helm_repository:
        description: "Optional: The repository to publish the chart."
        type: string
        required: false
        default: ${{ github.repository_owner }}/helm-charts
      skip_chart:
        description: "Optional: Variable for deciding if the creation of a chart should be skipped"
        type: boolean
        required: false
        default: false
      include_image_name:
        description: "Optional: Variable for deciding if the name of the image should be prepended to the name of a chart"
        type: boolean
        required: false
        default: false

    secrets:
      deploy-key:
        description: |
          The token used to create the release and
          release the chart with a workflow dispatch to 'inputs.helm_repository'.
        required: true

    outputs:
      chart_name:
        description:
        value: ${{ jobs.release_chart.outputs.chart_name }}
      chart_version:
        description:
        value: ${{ jobs.release_chart.outputs.chart_version }}
jobs:
  # build_containers_and_update_chart:
  #   name: Build containers
  #   runs-on: ubuntu-latest
  #   if: ${{ inputs.containers != '[]' }}
  #   strategy:
  #     matrix:
  #       containers: ${{fromJson(inputs.containers)}}
  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: actions/download-artifact@v2
  #       with:
  #         path: artifacts/

  #     - name: Container image name
  #       id: image_name
  #       uses: ASzc/change-string-case-action@v2
  #       with:
  #         string: ghcr.io/${{ github.repository_owner }}/${{ matrix.containers.image_name }}

  #     - name: Build and push container image
  #       id: docker_build
  #       uses: Energinet-DataHub/.github/.github/actions/build-and-push-container@main
  #       with:
  #         dockerfile: ${{ matrix.containers.Dockerfile }}
  #         image_name: ${{ steps.image_name.outputs.lowercase }}
  #         image_tag: ${{ matrix.containers.image_tag }}
  #         docker_context: ${{ matrix.containers.context && matrix.containers.context || '.'}}

  release-chart:
    name: Release chart
    needs: [build_containers_and_update_chart]
    runs-on: ubuntu-latest
    if: |
      always() &&
      inputs.skip_chart == false &&
      (needs.build_containers_and_update_chart.result == 'success' || (needs.build_containers_and_update_chart.result == 'skipped' && inputs.containers == '[]'))
    outputs:
      chart_name: ${{ steps.release_chart.outputs.chart_name }}
      chart_version: ${{ steps.release_chart.outputs.chart_version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: install yamlpath
        uses: Energinet-DataHub/.github/.github/actions/yamlpath-install@main

      - name: If pr then override containers version in chart
        if: github.event_name == 'pull_request'
        shell: bash
        run: |
          JSON='${{ inputs.containers }}'
          VALUES_FILE=${{ inputs.chart_folder }}/values.yaml
          echo $JSON | jq -c '.[]' | while read i; do
              DEPLOYMENT_NAME=$(echo $i | jq -r .deployment_name)
              TAG=$(echo $i | jq -r .image_tag)
              yaml-set --change eo-base-helm-chart.deployments.${DEPLOYMENT_NAME}.image.tag --value $TAG $VALUES_FILE
          done

      - name: Release helm chart
        id: release_chart
        uses: Energinet-DataHub/.github/.github/actions/helm-release-chart@main
        with:
          deploy_key: ${{ secrets.deploy-key }}
          chart_folder: ${{ inputs.chart_folder }}
          chart_repository: ${{ inputs.helm_repository }}
          chart_version: ${{ inputs.chart_version }}
          include_image_name: ${{ inputs.include_image_name }}
