# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Infrastructure build - prerelease
description: |
  This workflow will validate the infrastructure as code (terraform files)
  and then create a prerelease package containing the files.
  The prerelease name will be in the format 'infrastructure_<PR-number>'.

on:
  workflow_call:
    inputs:
      TERRAFORM_VERSION:
        required: true
        type: string
      TERRAFORM_WORKING_DIRECTORY:
        required: true
        type: string
      INFRASTRUCTURE_PATH:
        required: true
        type: string

jobs:
  create_prerelease:
    runs-on: ubuntu-latest
    env:
      RELEASE_FOLDER_PATH: ${{ github.workspace }}/release
      RELEASE_VERSION: infrastructure_${{ github.event.pull_request.number }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_wrapper: false
          terraform_version: ${{ inputs.TERRAFORM_VERSION }}

      - name: Terraform init
        shell: bash
        working-directory: ${{ inputs.TERRAFORM_WORKING_DIRECTORY }}
        run: terraform init -backend=false

      - name: Terraform validate
        shell: bash
        working-directory: ${{ inputs.TERRAFORM_WORKING_DIRECTORY }}
        run: terraform validate

      - name: Copy infrastructure files
        shell: bash
        run: |
          mkdir ${{ env.RELEASE_FOLDER_PATH }}
          mkdir ${{ env.RELEASE_FOLDER_PATH }}/infrastructure
          cp -fR ${{ inputs.INFRASTRUCTURE_PATH }}/main ${{ env.RELEASE_FOLDER_PATH }}/infrastructure/main 2>/dev/null || :
          cp -fR ${{ inputs.INFRASTRUCTURE_PATH }}/env ${{ env.RELEASE_FOLDER_PATH }}/infrastructure/env 2>/dev/null || :

      - name: Zip files for prerelease
        uses: thedoctor0/zip-release@0.6.2
        with:
          type: 'zip'
          filename: infrastructure.zip
          directory: ${{ env.RELEASE_FOLDER_PATH }}

      - name: Create prelease
        uses: marvinpinto/action-automatic-releases@v1.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          automatic_release_tag: ${{ env.RELEASE_VERSION }}
          prerelease: true
          title: ${{ env.RELEASE_VERSION }}
          files: |
            ${{ env.RELEASE_FOLDER_PATH }}/infrastructure.zip