name: "Python Covernator Commit"
description: "Generate and commit Covernator coverage results"

inputs:
  project_directory:
    required: true
    description: "Path to the project root (where tests/ live)"
  geh_common_version:
    required: false
    default: "7.2.2"
    description: "geh_common package version"

runs:
  using: "composite"
  steps:
    # -------------------------------------------------------------------------
    # 1Ô∏è‚É£ Checkout domain repo
    # -------------------------------------------------------------------------
    - name: Checkout domain repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        persist-credentials: true

    # -------------------------------------------------------------------------
    # 2Ô∏è‚É£ Setup Python + UV
    # -------------------------------------------------------------------------
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Setup uv
      uses: astral-sh/setup-uv@v5

    # -------------------------------------------------------------------------
    # 3Ô∏è‚É£ Install geh_common from branch or tag
    # -------------------------------------------------------------------------
    - name: Install geh_common
      shell: bash
      run: |
        echo "Installing geh_common from branch ${{ inputs.geh_common_version }}"
        uv pip install --system \
          "geh_common @ git+https://git@github.com/Energinet-DataHub/opengeh-python-packages@${{ inputs.geh_common_version }}#subdirectory=source/geh_common"

    # -------------------------------------------------------------------------
    # 4Ô∏è‚É£ Run covernator analysis + markdown generation
    # -------------------------------------------------------------------------
    - name: Run Covernator + Markdown generator
      shell: bash
      run: |
        python - <<'PYCODE'
        import os
        from geh_common.testing.covernator.entrypoints import run_and_generate_markdown

        project_dir = os.getenv("PROJECT_DIRECTORY")
        if not project_dir:
            raise ValueError("Missing PROJECT_DIRECTORY input for Covernator action.")

        print(f"üîç Running Covernator analysis on: {project_dir}")
        run_and_generate_markdown(project_dir)
        PYCODE
      env:
        PROJECT_DIRECTORY: ${{ inputs.project_directory }}

    # -------------------------------------------------------------------------
    # 5Ô∏è‚É£ Commit the results
    # -------------------------------------------------------------------------
    - name: Commit and push markdown to docs
      shell: bash
      env:
        BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      run: |
        echo "üì¶ Committing results to docs/covernator"
        git config user.name "github-actions"
        git config user.email "ci@github.com"
        git add docs/covernator/coverage_overview.md
        git commit -m "üß© Update Covernator results [skip ci]" || { echo "No changes to commit"; exit 0; }
        git push origin HEAD:${BRANCH_NAME}
