# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Package and release helm chart
description: |
  Packages and creates a release with the chart,
  and creates a workflow dispatch to pull into helm registry.
inputs:
  chart_folder:
    description: Path to the folder containing the chart.
    required: true
  chart_repository:
    description: The repository containing the chart repository
    default: ${{ github.event.repository.owner }}/helm-charts
    required: false
  chart_version:
    description: Override the chart version to a specific version
    required: false
  chart_repository_branch:
    description: The branch in which to add the chart.
    required: false
    default: 'gh-pages'
  deploy_key:
    description: A deploy key that has access to the chart repository.
    required: true
  include_image_name:
    description: Add the name of the image to the name of a chart.
    type: boolean
    required: false
    default: false

outputs:
  chart_name:
    description: The name of the chart that was released.
    value: ${{ steps.get_chart_info.outputs.name }}
  chart_version:
    description: The version of the chart that was released.
    value: ${{ steps.get_chart_info.outputs.version }}

runs:
  using: composite
  steps:
    - id: helm_directory
      name: Add helm checkout directory to env
      shell: bash
      run: |
        echo "helm-checkout-directory=helm-charts" >> $GITHUB_ENV

    - id: get_chart_info
      name: Get info from Chart.yaml
      shell: bash
      run: |
        NAME=$(grep ^"name: " ${{ inputs.chart_folder }}/Chart.yaml | cut -f2 -d' ')
        echo ::set-output name=version::${{ inputs.chart_version }}
        echo ::set-output name=name::$NAME
        if [ ${{ inputs.include_image_name }} ]; then
          echo ::set-output name=tag_name::$NAME-${{ inputs.chart_version }}
        else
          echo ::set-output name=tag_name::${{ inputs.chart_version }}
        fi

    - id: generate_filename
      name: Generate filename
      shell: bash
      run: |
        echo ::set-output name=filename::${{ steps.get_chart_info.outputs.name }}-${{ steps.get_chart_info.outputs.version }}.tgz

    - name: Update chart dependencies
      shell: bash
      run: helm dependency update ${{ inputs.chart_folder }}

    - name: Lint chart
      shell: bash
      run: helm lint ${{ inputs.chart_folder }}

    - name: Packages chart
      shell: bash
      run: helm package --version ${{ steps.get_chart_info.outputs.version }} ${{ inputs.chart_folder }}

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        tag_name: ${{ steps.get_chart_info.outputs.tag_name }}
        release_name: Release ${{ steps.get_chart_info.outputs.tag_name }}
        draft: false
        prerelease: ${{ github.ref_name != 'main' }}

    - name: Add chart.tar to release
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ github.token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./${{ steps.generate_filename.outputs.filename }}
        asset_name: ${{ steps.generate_filename.outputs.filename }}
        asset_content_type: application/zip

    - name: Checkout chart repository
      uses: actions/checkout@v3
      with:
        path: ${{ env.helm-checkout-directory }}
        repository: ${{ inputs.chart_repository }}
        ssh-key: ${{ inputs.deploy_key }}
        ref: ${{ inputs.chart_repository_branch }}

    - name: Download chart tarball
      shell: bash
      working-directory: ${{ env.helm-checkout-directory }}
      run: |
        wget https://github.com/${{ github.repository }}/releases/download/${{ steps.get_chart_info.outputs.tag_name }}/${{ steps.generate_filename.outputs.filename }} -O ./${{ steps.generate_filename.outputs.filename }}

    - name: Update index file for helm registry
      shell: bash
      working-directory: ${{ env.helm-checkout-directory }}
      run: helm repo index .

    - name: Commit changes
      uses: EndBug/add-and-commit@v9
      with:
        add: '["index.yaml", "${{ steps.generate_filename.outputs.filename }}"]'
        message: Updated the helm registry with file ${{ steps.generate_filename.outputs.filename }}
        push: true
        new_branch: ${{ inputs.chart_repository_branch }}
        default_author: github_actions
        cwd: ${{ env.helm-checkout-directory }}
