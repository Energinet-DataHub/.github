# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Pack project as NuGet package
description: Pack a .NET project as either a pre-release (alpha) or release NuGet package

inputs:
  project_path:
    required: true
  build_configuration:
    required: false
    default: Release

runs:
  using: composite
  steps:
    - name: Get version suffix property value
      uses: Energinet-DataHub/.github/.github/actions/nuget-get-version-suffix@v14
      id: get_version_suffix

    - name: Generate SBOM
      uses: anchore/sbom-action@v0
      with:
        path: ${{ inputs.project_path }}
        artifact-name: sbom-${{ inputs.release_name_prefix }}.spdx.json
        format: spdx-json
        output-file: ${{ github.workspace }}/sbom.json

    - name: Move SBOM into manifest folder
      shell: pwsh
      run: |
        $manifestDir = Join-Path "${{ inputs.project_path }}" "obj/_manifest/spdx_2.2"
        New-Item -ItemType Directory -Force -Path $manifestDir | Out-Null
        Copy-Item "${{ github.workspace }}/sbom.json" (Join-Path $manifestDir "manifest.spdx.json") -Force

    - name: Pack project
      shell: pwsh
      run: |
        dotnet pack ${{ inputs.project_path }} `
          --configuration ${{ inputs.build_configuration }} `
          --include-symbols `
          -p:SymbolPackageFormat=snupkg `
          -p:RepositoryCommit=${{ github.sha }} `
          ${{ steps.get_version_suffix.outputs.version_suffix_property }}

    - name: Verify SBOM inclusion
      shell: pwsh
      run: |
        $pkg = Get-ChildItem "${{ inputs.project_path }}/bin/${{ inputs.build_configuration }}" -Filter "*.nupkg" | Select-Object -First 1
        Write-Host "Inspecting: $($pkg.FullName)"
        unzip -l $pkg.FullName | Select-String "_manifest/spdx_2.2/manifest.spdx.json"
