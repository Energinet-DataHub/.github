# Copyright 2020 Energinet DataHub A/S
#
# Licensed under the Apache License, Version 2.0 (the "License2");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Download and unzip release
description: Download and unzip release

inputs:
  destination_folder_path:
    required: true
  release_repository_path:
    required: true
  release_name:
    required: true

runs:
  using: composite
  steps:
    - name: Download release
      shell: bash
      run: |
        # If GITHUB_OAUTH_TOKEN is set, the release resides in a private repo --> we use https://github.com/gruntwork-io/fetch to add Github authentication headers.
        # Otherwise, we can use wget and avoid the overhead of installing fetch on Github hosted runners prior to downloading artifact

        if [[ -n "${GITHUB_OAUTH_TOKEN}" ]]; then
          echo "** Downloading using fetch **"

          # fetch is installed on self-hosted runners, but not on Github hosted dittos
          if [[ $(command -v fetch) == "" ]]; then
            echo "Installing fetch"
            /home/linuxbrew/.linuxbrew/bin/brew install fetch  #Homebrew isn't in PATH on Ubuntu images, ref: https://github.com/actions/runner-images/issues/6283
          fi

          /home/linuxbrew/.linuxbrew/opt/fetch/bin/fetch --repo="https://github.com/${{ inputs.release_repository_path }}" --tag="${{ inputs.release_name }}" --release-asset="${{ inputs.release_name }}.zip" /tmp

          unzip /tmp/${{ inputs.release_name }}.zip -d ${{ inputs.destination_folder_path }}
        else
          echo "** Downloading using wget **"
          wget https://github.com/${{ inputs.release_repository_path }}/releases/download/${{ inputs.release_name }}/${{ inputs.release_name }}.zip

          unzip ${{ inputs.release_name }}.zip -d ${{ inputs.destination_folder_path }}
        fi
